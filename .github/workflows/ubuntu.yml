name: Ubuntu

# Trigger the workflow on push or pull requests for main and develop branches
on:
  push:
    branches:
    - main
    - develop
    paths:
    - '**/*.c'
    - '**/*.cpp'
    - '**/*.h'
    - '**/*.hpp'
    - '**/CMakeLists.txt'
    - '**/Makefile'
    - '**/cmake/**'
    - '.github/workflows/ubuntu.yml'
  pull_request:
    branches:
    - main
    - develop
    paths:
    - '**/*.c'
    - '**/*.cpp'
    - '**/*.h'
    - '**/*.hpp'
    - '**/CMakeLists.txt'
    - '**/Makefile'
    - '**/cmake/**'
    - '.github/workflows/ubuntu.yml'

jobs:
  build:
    name: Build and Compile
    strategy:
      fail-fast: false
      matrix:
        include:
          [
            # GCC
            { pkgs: "nasm gcc-9  g++-9", cc: gcc-9, cxx: g++-9, os: ubuntu-latest },
            { pkgs: "nasm gcc-10 g++-10", cc: gcc-10, cxx: g++-10, os: ubuntu-latest },
            { pkgs: "nasm gcc-11 g++-11", cc: gcc-11, cxx: g++-11, os: ubuntu-latest },
            { pkgs: "nasm gcc-12 g++-12", cc: gcc-12, cxx: g++-12, os: ubuntu-latest },
            { pkgs: "nasm gcc-13 g++-13", cc: gcc-13, cxx: g++-13, os: ubuntu-latest },
            { pkgs: "nasm gcc-14 g++-14", cc: gcc-14, cxx: g++-14, os: ubuntu-latest },
            # Clang
            { pkgs: "nasm clang-14 clang++-14", cc: clang-14, cxx: clang++-14, os: ubuntu-latest },
            { pkgs: "nasm clang-15 clang++-15", cc: clang-15, cxx: clang++-15, os: ubuntu-latest },
            { pkgs: "nasm clang-16 clang++-16", cc: clang-16, cxx: clang++-16, os: ubuntu-latest },
            { pkgs: "nasm clang-17 clang++-17", cc: clang-17, cxx: clang++-17, os: ubuntu-latest },
            { pkgs: "nasm clang-18 clang++-18", cc: clang-18, cxx: clang++-18, os: ubuntu-latest },
            { pkgs: "nasm clang-19 clang++-19", cc: clang-19, cxx: clang++-19, os: ubuntu-latest }
          ]
    runs-on: ${{ matrix.os }}
    # Set environment variables
    env:
      # We globally set CC and CXX.
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
    - name: Clone repository
      uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.pkgs }}
    - name: Build
      run: |
        cmake -B build
        cmake --build build --parallel 2

  test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Install test dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y nasm qemu-system-x86 mtools xorriso

    - name: Build
      run: |
        cmake -B build -DEMULATOR_OUTPUT_TYPE=OUTPUT_LOG 
        cmake --build build --parallel 2 --target filesystem

    - name: Run tests
      run: |
        cmake --build build --parallel 2 --target cdrom_test.iso qemu-test

    - name: Check
      run: |
        cat build/test.log | scripts/tapview

    - name: Archive the logs
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: |
          build/test.log
          build/serial.log
